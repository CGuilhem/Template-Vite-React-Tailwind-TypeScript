{
  "compilerOptions": {
    "target": "es2022",
    "useDefineForClassFields": true,
    "lib": ["ES2022", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Helps mend a few of the fences between CommonJS and ES Modules. */
    "esModuleInterop": true,
    /* Allows you to import .js */
    "allowJs": true,
    /*  This option forces TypeScript to consider all files as modules.
    This helps to avoid 'cannot redeclare block-scoped variable' errors. */
    "moduleDetection": "force",

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    /*  Prevents you from accessing an array or object without first checking if it's defined.
    This is a great way to prevent runtime errors. */
    "noUncheckedIndexedAccess": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": ["src"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
